{"version":3,"sources":["../../src/plugins/webhooks.js"],"names":[],"mappings":";;;;;;AAMA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAM,WAAW,uBAAY,MAAZ,CAAmB;;;;;;;;;;;;;AAYlC,QAZkC,kBAY3B,OAZ2B,EAYlB;AACd,WAAO,KAAK,OAAL,CAAa;AAClB,oBADkB;AAElB,WAAQ,KAAK,MAAL,CAAY,eAApB,cAFkB;AAGlB,YAAM;AAHY,KAAb,EAKJ,IALI,CAKC,UAAC,GAAD;AAAA,aAAS,IAAI,IAAb;AAAA,KALD,CAAP;AAMD,GAnBiC;;;;;;;;;;;;;;AAgClC,KAhCkC,eAgC9B,OAhC8B,EAgCrB;AACX,QAAM,KAAK,QAAQ,EAAR,IAAc,OAAzB;;AAEA,WAAO,KAAK,OAAL,CAAa;AAClB,WAAQ,KAAK,MAAL,CAAY,eAApB,kBAAgD;AAD9B,KAAb,EAGJ,IAHI,CAGC,UAAC,GAAD;AAAA,aAAS,IAAI,IAAJ,CAAS,KAAT,IAAkB,IAAI,IAA/B;AAAA,KAHD,CAAP;AAID,GAvCiC;;;;;;;;;;;;;;;AAqDlC,MArDkC,gBAqD7B,OArD6B,EAqDpB;AAAA;;AACZ,WAAO,KAAK,OAAL,CAAa;AAClB,WAAQ,KAAK,MAAL,CAAY,eAApB,eADkB;AAElB,UAAI;AAFc,KAAb,EAIJ,IAJI,CAIC,UAAC,GAAD;AAAA,aAAS,mBAAS,GAAT,EAAc,MAAK,KAAnB,CAAT;AAAA,KAJD,CAAP;AAKD,GA3DiC;;;;;;;;;;;;;;AAwElC,QAxEkC,kBAwE3B,OAxE2B,EAwElB;AACd,QAAM,KAAK,QAAQ,EAAR,IAAc,OAAzB;AACA,WAAO,KAAK,OAAL,CAAa;AAClB,sBADkB;AAElB,WAAQ,KAAK,MAAL,CAAY,eAApB,kBAAgD;AAF9B,KAAb,EAIJ,IAJI,CAIC,UAAC,GAAD,EAAS;;;AAGb,UAAI,IAAI,UAAJ,KAAmB,GAAvB,EAA4B;AAC1B,eAAO,SAAP;AACD;AACD,aAAO,IAAI,IAAX;AACD,KAXI,CAAP;AAYD,GAtFiC;;;;;;;;;;;;;;AAmGlC,QAnGkC,kBAmG3B,OAnG2B,EAmGlB;AACd,QAAM,KAAK,QAAQ,EAAnB;AACA,WAAO,KAAK,OAAL,CAAa;AAClB,mBADkB;AAElB,WAAQ,KAAK,MAAL,CAAY,eAApB,kBAAgD,EAF9B;AAGlB,YAAM;AAHY,KAAb,EAKJ,IALI,CAKC,UAAC,GAAD;AAAA,aAAS,IAAI,IAAb;AAAA,KALD,CAAP;AAMD;AA3GiC,CAAnB,CAAjB;;kBA8Ge,Q","file":"webhooks.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport Page from '../lib/page';\nimport {SparkPlugin} from '@ciscospark/spark-core';\n\n/**\n * @typedef {Object} Types~Webhook\n * @property {string} id - The unique ID for the webhook.\n * @property {string} resource - The resource type for the webhook.\n * @property {string} event - The event type for the webhook.\n * @property {string} filter - The filter that defines the webhook scope.\n * @property {string} targetUrl - The URL that receives POST requests for each event.\n * @property {string} name - A user-friendly name for this webhook.\n */\n\n/**\n * A webhook notifies an application when an event for which the application is\n * registered has occurred.\n * @class\n * @extends SparkPlugin\n */\nconst Webhooks = SparkPlugin.extend({\n  /**\n   * Posts a webhook.\n   * @instance\n   * @memberof Webhooks\n   * @param {Types~Webhook} webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * <%= webhooks__create_es6 %>\n   * @example\n   * <%= webhooks__create %>\n   */\n  create(webhook) {\n    return this.request({\n      method: `POST`,\n      uri: `${this.config.hydraServiceUrl}/webhooks`,\n      body: webhook\n    })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Shows details for a webhook.\n   * @instance\n   * @memberof Webhooks\n   * @param {Webhook|string} webhook\n   * @returns {Promise<Array<Webhook>>}\n   * @example\n   * <%= webhooks__get_es6 %>\n   * @example\n   * <%= webhooks__get %>\n   */\n  get(webhook) {\n    const id = webhook.id || webhook;\n\n    return this.request({\n      uri: `${this.config.hydraServiceUrl}/webhooks/${id}`\n    })\n      .then((res) => res.body.items || res.body);\n  },\n\n  /**\n   * Lists all webhooks.\n   * @instance\n   * @memberof Webhooks\n   * @param {Object} options\n   * @param {integer} options.max Limit the maximum number of webhooks in the response.\n   * @returns {Promise<Webhook>}\n   * @example\n   * <%= webhooks__list_es6 %>\n   * @example\n   * <%= webhooks__list %>\n   */\n  list(options) {\n    return this.request({\n      uri: `${this.config.hydraServiceUrl}/webhooks/`,\n      qs: options\n    })\n      .then((res) => new Page(res, this.spark));\n  },\n\n  /**\n   * Delete a webhook.\n   * @instance\n   * @memberof Webhooks\n   * @param {Webhook|string} webhook\n   * @returns {Promise}\n   * @example\n   * <%= webhooks__remove_es6 %>\n   * @example\n   * <%= webhooks__remove %>\n   */\n  remove(webhook) {\n    const id = webhook.id || webhook;\n    return this.request({\n      method: `DELETE`,\n      uri: `${this.config.hydraServiceUrl}/webhooks/${id}`\n    })\n      .then((res) => {\n        // Firefox has some issues with 204s and/or DELETE. This should move to\n        // http-core\n        if (res.statusCode === 204) {\n          return undefined;\n        }\n        return res.body;\n      });\n  },\n\n  /**\n   * Update a webhook.\n   * @instance\n   * @memberof Webhooks\n   * @param {Webhook} webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * <%= webhooks__update_es6 %>\n   * @example\n   * <%= webhooks__update %>\n   */\n  update(webhook) {\n    const id = webhook.id;\n    return this.request({\n      method: `PUT`,\n      uri: `${this.config.hydraServiceUrl}/webhooks/${id}`,\n      body: webhook\n    })\n      .then((res) => res.body);\n  }\n});\n\nexport default Webhooks;\n"]}