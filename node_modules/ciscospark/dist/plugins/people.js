'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _page = require('../lib/page');

var _page2 = _interopRequireDefault(_page);

var _sparkCore = require('@ciscospark/spark-core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @typedef {Object} Types~Person
 * @property {uuid} id - Unique identifier for the person
 * @property {Array<email>} emails - Email addresses of the person
 * @property {string} displayName - Display name of the person
 * @property {isoDate} created - The date and time that the person was created
 */

/**
 * @class
 * @extends SparkPlugin
 */
/**!
 *
 * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.
 * @private
 */

var People = _sparkCore.SparkPlugin.extend({
  /**
   * Returns a single person by ID
   * @instance
   * @memberof People
   * @param {Types~Person|uuid} person
   * @returns {Promise<Types~Person>}
   * @example
   * <%= people__get_es6 %>
   * @example
   * <%= people__get %>
   */

  get: function get(person) {
    var id = person.personId || person.id || person;
    return this.request({
      uri: this.config.hydraServiceUrl + '/people/' + id
    }).then(function (res) {
      return res.body;
    });
  },


  /**
   * Returns a list of people
   * @instance
   * @memberof People
   * @param {Object} options
   * @param {email} options.email - Returns people with an email that contains this string
   * @param {string} options.name - Returns people with a name that contains this string
   * @returns {Promise<Page<Types~Person>>}
   * @example
   * <%= people__list_es6 %>
   * @example
   * <%= people__list %>
   */
  list: function list(options) {
    var _this = this;

    return this.request({
      uri: this.config.hydraServiceUrl + '/people',
      qs: options
    }).then(function (res) {
      return new _page2.default(res, _this.spark);
    });
  }
});

exports.default = People;
//# sourceMappingURL=people.js.map
